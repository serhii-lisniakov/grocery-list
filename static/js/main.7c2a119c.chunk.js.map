{"version":3,"sources":["components/assets/cart.svg","components/Header/Header.js","renderIf.js","redux/entries.js","components/Entries/Entries.js","components/List/List.js","components/page/Page.js","components/App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","Header","className","src","cart","alt","to","activeClassName","Component","withRouter","RenderIf","props","condition","children","initialState","entries","id","priority","name","status","date","Entry","onClick","changeStatus","data-id","style","background","delete","xmlns","width","height","viewBox","transform","fill","d","connect","state","entriesReducer","useState","entriesList","setEntries","dispatch","useDispatch","deleteHandler","e","entry","type","payload","deleteEntry","find","currentTarget","dataset","changeStatusHandler","sort","a","b","map","key","List","inputHandler","field","setState","target","value","addEntry","newEntry","length","Date","toLocaleDateString","createEntry","filter","have","document","querySelector","ranOut","checked","this","render","onChange","defaultChecked","bind","Page","class","App","basename","exact","path","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","forEach","store","localStorage","getItem","createStore","composeWithDevTools","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,kC,gTCMrCC,E,uKAIE,OACI,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,eACX,yBAAKC,IAAKC,IAAMC,IAAI,KACpB,kDAEJ,yBAAKH,UAAU,gBACX,kBAAC,IAAD,CAASI,GAAG,QAAQC,gBAAgB,qBAAqBL,UAAU,eAAnE,QACA,kBAAC,IAAD,CAASI,GAAG,WAAWC,gBAAgB,qBAAqBL,UAAU,eAAtE,iB,GAZCM,aAmBNC,cAAWR,GCzBbS,EAAW,SAACC,GAAD,OAAaA,EAAMC,UAAYD,EAAME,SAAW,M,uBCAlEC,EAAe,CACjBC,QAAS,CACL,CACIC,GAAI,EACJC,SAAU,IACVC,KAAM,OACNC,OAAQ,OACRC,KAAM,cAEV,CACIJ,GAAI,EACJC,SAAU,IACVC,KAAM,QACNC,OAAQ,OACRC,KAAM,cAEV,CACIJ,GAAI,EACJC,SAAU,IACVC,KAAM,QACNC,OAAQ,UACRC,KAAM,cAEV,CACIJ,GAAI,EACJC,SAAU,IACVC,KAAM,OACNC,OAAQ,OACRC,KAAM,cAEV,CACIJ,GAAI,EACJC,SAAU,IACVC,KAAM,OACNC,OAAQ,OACRC,KAAM,gB,MA0BX,ICxDDC,EAAQ,SAACV,GACX,OACI,yBAAKT,UAAU,SACX,yBAAKA,UAAU,kBAAkBS,EAAMM,UACvC,yBAAKf,UAAU,cAAcS,EAAMO,MACnC,yBAAKhB,UAAU,gBACX,0BACIoB,QAASX,EAAMY,aACfC,UAASb,EAAMK,GACfS,MAAwB,SAAjBd,EAAMQ,OAAoB,CAACO,WAAY,oBAAsB,CAACA,WAAY,qBAChFf,EAAMQ,SAGf,yBAAKjB,UAAU,cAAa,8BAAOS,EAAMS,OACzC,yBAAKlB,UAAU,iBACX,0BAAMoB,QAASX,EAAMgB,OAAQH,UAASb,EAAMK,IACxC,yBAAKY,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,mBAAvE,IAA0F,uBAAGC,UAAU,+BAAb,IAA4C,0BAAMC,KAAK,OAAOC,EAAE,4UAAhE,IAA6Y,0BAAMD,KAAK,OAAOC,EAAE,gQAAja,KAA1F,SAgDLC,eATS,SAAAC,GACpB,MAAO,CACHrB,QAASqB,EAAMC,eAAetB,WAOE,KAAzBoB,EAzCC,SAACxB,GAAW,IAAD,EACW2B,mBAAS3B,EAAMI,SAD1B,mBAChBwB,EADgB,KACHC,EADG,KAEjBC,EAAWC,cAEXC,EAAgB,SAACC,GACnBH,EDcD,SAAqBI,GACxB,MAAO,CACHC,KAAM,eACNC,QAASF,GCjBAG,CAAYT,EAAYU,MAAK,SAAAJ,GAAK,OAAIA,EAAM7B,MAAQ4B,EAAEM,cAAcC,QAAQnC,QACrFwB,EAAW7B,EAAMI,UAGfqC,EAAsB,SAACR,GACzBH,EDgBD,SAAsBI,GACzB,MAAO,CACHC,KAAM,gBACNC,QAASF,GCnBAtB,CAAagB,EAAYU,MAAK,SAAAJ,GAAK,OAAIA,EAAM7B,MAAQ4B,EAAEM,cAAcC,QAAQnC,QACtFwB,EAAW7B,EAAMI,UAGrB,OACI,6BACKwB,EAAYc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAErC,SAAWsC,EAAEtC,YAAUuC,KAAI,SAAAX,GAAK,OAC1D,kBAAC,EAAD,CACIY,IAAKZ,EAAM7B,GACXA,GAAI6B,EAAM7B,GACVC,SAAU4B,EAAM5B,SAChBC,KAAM2B,EAAM3B,KACZC,OAAQ0B,EAAM1B,OACdC,KAAMyB,EAAMzB,KACZO,OAAQgB,EACRpB,aAAc6B,W,QC5C5BM,G,kNACFtB,MAAQ,CACJrB,QAAS,CAAC,EAAKJ,MAAMI,SACrBE,SAAU,IACVC,KAAM,I,EAOVyC,aAAe,SAACC,EAAMhB,GAClB,EAAKiB,SAAL,eACKD,EAAQhB,EAAEkB,OAAOC,S,EAI1BC,SAAW,WACP,IAAMC,EAAW,CACbjD,GAAI,EAAKL,MAAMI,QAAQmD,OAAS,EAChCjD,SAAU,EAAKmB,MAAMnB,SACrBC,KAAM,EAAKkB,MAAMlB,KACjBC,OAAQ,UACRC,MAAM,IAAI+C,MAAOC,sBAGrB,EAAKzD,MAAM0D,YAAYJ,GACvB,EAAKJ,SAAS,CAAC9C,QAAS,CAAC,EAAKJ,MAAMI,Y,EAGxCuD,OAAS,WACL,IAAMC,EAAOC,SAASC,cAAc,cAC9BC,EAASF,SAASC,cAAc,gBAEtC,EAAKZ,UAAS,WACV,OAAIU,EAAKI,SAAWD,EAAOC,QAChB,CACH5D,QAAS,EAAKqB,MAAMrB,SAGlBwD,EAAKI,SAAYD,EAAOC,QAKzBJ,EAAKI,QACH,CACH5D,QAAS,EAAKqB,MAAMrB,QAAQuD,QAAO,SAAAzB,GAAK,MAAqB,YAAjBA,EAAM1B,WAGjDuD,EAAOC,QACL,CACH5D,QAAS,EAAKqB,MAAMrB,QAAQuD,QAAO,SAAAzB,GAAK,MAAqB,SAAjBA,EAAM1B,gBAFrD,EATM,CACHJ,QAAS,Q,mEAlCrB6D,KAAKC,W,+BAoDL,OACI,yBAAK3E,UAAU,QACX,yBAAKA,UAAU,gBACX,6BACI,+BACI,2BAAOc,GAAG,YAAY8D,SAAUF,KAAKN,OAAQS,gBAAc,EAACjC,KAAK,aADrE,YAGA,+BACI,2BAAO9B,GAAG,cAAc8D,SAAUF,KAAKN,OAAQS,gBAAc,EAACjC,KAAK,aADvE,WAKR,yBAAK5C,UAAU,eACX,yCACA,qCACA,uCACA,qCACA,yCAEJ,yBAAKA,UAAU,YACX,4BAAQ4E,SAAUF,KAAKjB,aAAaqB,KAAKJ,KAAM,aAC3C,4BAAQb,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAEJ,2BAAOjB,KAAK,OAAOgC,SAAUF,KAAKjB,aAAaqB,KAAKJ,KAAM,UAC1D,4BAAQtD,QAASsD,KAAKZ,SAAU9D,UAAU,YAA1C,MAEJ,yBAAKA,UAAU,gBACV0E,KAAKxC,MAAMrB,QAAQsC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAErC,SAAWsC,EAAEtC,YAAUuC,KAAI,SAAAX,GAAK,OACjE,kBAAC,EAAD,CACIY,IAAKZ,EAAM7B,GACXA,GAAI6B,EAAM7B,GACVC,SAAU4B,EAAM5B,SAChBC,KAAM2B,EAAM3B,KACZC,OAAQ0B,EAAM1B,OACdC,KAAMyB,EAAMzB,gB,GAlGrBZ,cAuHJ2B,eAZS,SAAAC,GACpB,MAAO,CACHrB,QAASqB,EAAMC,eAAetB,YAIX,SAAC0B,GACxB,MAAO,CACH4B,YAAa,SAAAzB,GAAC,OAAIH,EFnFf,CACHK,KAAM,eACNC,QEiFuCH,QAIhCT,CAA6CuB,GCtG7CuB,G,MAlBF,SAACtE,GACV,OACI,yBAAKT,UAAWS,EAAMuE,OAClB,yBAAKhF,UAAU,aACX,kBAACQ,EAAD,CAAUE,UAA2B,mBAAhBD,EAAMuE,OACvB,kBAAC,EAAD,OAEJ,kBAACxE,EAAD,CAAUE,UAA2B,sBAAhBD,EAAMuE,OACvB,kBAAC,EAAD,OAEJ,kBAACxE,EAAD,CAAUE,UAA2B,oBAAhBD,EAAMuE,OACvB,gECELC,MAhBf,WACE,OACE,oCACI,kBAAC,IAAD,CAAQC,SAAU,iBAChB,kBAAC,EAAD,MACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIT,OAAQ,kBAAM,kBAAC,IAAD,CAAUvE,GAAG,aACjD,kBAAC,IAAD,CAAOgF,KAAM,QAAST,OAAQ,kBAAM,kBAAC,EAAD,CAAMK,MAAM,sBAChD,kBAAC,IAAD,CAAOI,KAAM,WAAYT,OAAQ,kBAAM,kBAAC,EAAD,CAAMK,MAAM,yBACnD,kBAAC,IAAD,CAAOL,OAAQ,kBAAM,kBAAC,EAAD,CAAMK,MAAM,2BCF7BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCdAC,EAAcC,0BAAgB,CAChCxD,eNwD0B,WAAmC,IAAlCD,EAAiC,uDAAzBtB,EAAcgF,EAAW,uCAC5D,OAAQA,EAAOhD,MACX,IAAK,eACD,OAAO,2BACAV,GADP,IAEIrB,QAAQ,CAAE+E,EAAO/C,SAAV,mBAAsBX,EAAMrB,YAE3C,IAAK,eACD,OAAO,2BACAqB,GADP,IAEIrB,QAASqB,EAAMrB,QAAQuD,QAAO,SAAAzB,GAAK,OAAIA,EAAM7B,KAAO8E,EAAO/C,QAAQ/B,QAE3E,IAAK,gBACD,OAAO,2BACAoB,GADP,IAEIrB,QAASqB,EAAMrB,QAAQgF,SAAQ,SAAAlD,GACvBA,EAAM7B,KAAO8E,EAAO/C,QAAQ/B,MACxB6B,EAAM1B,OAAS,QAAQ0B,EAAM1B,OAAS,WACjC0B,EAAM1B,OAAS,aAAW0B,EAAM1B,OAAS,cAIlE,QAAS,OAAOiB,MMzEX4D,GAFQC,aAAaC,QAAQ,WAErBC,sBACjBP,EAEAQ,kCCJJC,IAASxB,OACP,kBAAC,IAAD,CAAUmB,MAAOA,GACf,kBAAC,EAAD,OAEFxB,SAAS8B,eAAe,SFsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7c2a119c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cart.cc3cb56d.svg\";","import React, {Component} from 'react'\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport './Header.css'\r\nimport cart from '../assets/cart.svg'\r\n\r\n\r\nclass Header extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header-wrapper\">\r\n                <div className='header-logo'>\r\n                    <img src={cart} alt=\"\"/>\r\n                    <span>My Grosery List</span>\r\n                </div>\r\n                <div className=\"header-links\">\r\n                    <NavLink to=\"/list\" activeClassName=\"header-link-active\" className=\"header-link\">List</NavLink>\r\n                    <NavLink to=\"/entries\" activeClassName=\"header-link-active\" className=\"header-link\">Entries</NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header)","export const RenderIf = (props) => !!props.condition ? props.children : null;","const initialState = {\r\n    entries: [\r\n        {\r\n            id: 1,\r\n            priority: '1',\r\n            name: 'eggs',\r\n            status: 'have',\r\n            date: '29.09.2020'\r\n        },\r\n        {\r\n            id: 2,\r\n            priority: '3',\r\n            name: 'bread',\r\n            status: 'have',\r\n            date: '30.09.2020'\r\n        },\r\n        {\r\n            id: 3,\r\n            priority: '1',\r\n            name: 'chips',\r\n            status: 'ran out',\r\n            date: '28.09.2020'\r\n        },\r\n        {\r\n            id: 4,\r\n            priority: '2',\r\n            name: 'milk',\r\n            status: 'have',\r\n            date: '14.09.2020'\r\n        },\r\n        {\r\n            id: 5,\r\n            priority: '5',\r\n            name: 'beer',\r\n            status: 'have',\r\n            date: '28.09.2020'\r\n        },\r\n    ]\r\n}\r\n\r\nexport function createEntry(entry) {\r\n    return {\r\n        type: 'CREATE_ENTRY',\r\n        payload: entry\r\n    }\r\n}\r\n\r\nexport function deleteEntry(entry) {\r\n    return {\r\n        type: 'DELETE_ENTRY',\r\n        payload: entry\r\n    }\r\n}\r\n\r\nexport function changeStatus(entry) {\r\n    return {\r\n        type: 'CHANGE_STATUS',\r\n        payload: entry\r\n    }\r\n}\r\n\r\nexport const entriesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_ENTRY':\r\n            return { \r\n                ...state,\r\n                entries: [action.payload, ...state.entries]\r\n            }\r\n        case 'DELETE_ENTRY':\r\n            return {\r\n                ...state,\r\n                entries: state.entries.filter(entry => entry.id !== action.payload.id)\r\n            }\r\n        case 'CHANGE_STATUS':\r\n            return {\r\n                ...state,\r\n                entries: state.entries.forEach(entry => {\r\n                    if (entry.id === action.payload.id) {\r\n                        if (entry.status = 'have') entry.status = 'ran out'\r\n                        else if (entry.status = 'ran out') entry.status = 'have'\r\n                    }\r\n                })\r\n            }\r\n        default: return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { changeStatus, deleteEntry } from '../../redux/entries'\r\nimport './Entries.css'\r\n\r\nconst Entry = (props) => {\r\n    return (\r\n        <div className='entry'>\r\n            <div className='entry-priority'>{props.priority}</div>\r\n            <div className='entry-name'>{props.name}</div>\r\n            <div className='entry-status'>\r\n                <span \r\n                    onClick={props.changeStatus} \r\n                    data-id={props.id} \r\n                    style={props.status === 'have' ? {background: 'rgb(37, 163, 85)'} : {background: 'rgb(216, 56, 56)'}}>\r\n                    {props.status}\r\n                </span>\r\n            </div>\r\n            <div className='entry-date'><span>{props.date}</span></div>\r\n            <div className='entry-actions'>\r\n                <span onClick={props.delete} data-id={props.id}>\r\n                    <svg xmlns='http://www.w3.org/2000/svg' width='15' height='16' viewBox='0 0 14.93 16.99'> <g transform='translate(-1331.63 -446.18)'> <path fill='#fff' d='M1332.75,452.22l.79,9.59a1.484,1.484,0,0,0,1.49,1.36h8.14a1.481,1.481,0,0,0,1.48-1.36l.8-9.59h-12.7Zm3.86,7.47a.5.5,0,0,1-.5.5.508.508,0,0,1-.5-.5v-5.98a.5.5,0,0,1,.5-.49.493.493,0,0,1,.5.49Zm2.99,0a.508.508,0,0,1-.5.5.5.5,0,0,1-.5-.5v-5.98a.493.493,0,0,1,.5-.49.5.5,0,0,1,.5.49Zm2.98,0a.5.5,0,1,1-.99,0v-5.98a.5.5,0,0,1,.99,0Z' /> <path fill='#fff' d='M1345.07,448.17h-3.48v-.49a1.5,1.5,0,0,0-1.5-1.5h-1.99a1.5,1.5,0,0,0-1.49,1.5v.49h-3.49a1.5,1.5,0,0,0-1.49,1.5v.99a.5.5,0,0,0,.5.5h13.94a.493.493,0,0,0,.49-.5v-.99A1.5,1.5,0,0,0,1345.07,448.17Zm-4.48,0h-2.99v-.49a.5.5,0,0,1,.5-.5h1.99a.5.5,0,0,1,.5.5Z' /> </g> </svg>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Entries = (props) => {\r\n    const [entriesList, setEntries] = useState(props.entries)\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteHandler = (e) => {\r\n        dispatch(deleteEntry(entriesList.find(entry => entry.id === +e.currentTarget.dataset.id)))\r\n        setEntries(props.entries)\r\n    }\r\n\r\n    const changeStatusHandler = (e) => {\r\n        dispatch(changeStatus(entriesList.find(entry => entry.id === +e.currentTarget.dataset.id)))\r\n        setEntries(props.entries)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {entriesList.sort((a, b) => a.priority - b.priority).map(entry => (\r\n                <Entry \r\n                    key={entry.id}\r\n                    id={entry.id}\r\n                    priority={entry.priority}\r\n                    name={entry.name}\r\n                    status={entry.status}\r\n                    date={entry.date}\r\n                    delete={deleteHandler}\r\n                    changeStatus={changeStatusHandler}\r\n                 />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        entries: state.entriesReducer.entries\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Entries);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createEntry } from '../../redux/entries'\r\nimport Entry from '../Entries/Entries'\r\nimport './List.css'\r\n\r\n\r\n\r\n\r\nclass List extends Component {\r\n    state = {\r\n        entries: [this.props.entries],\r\n        priority: '1',\r\n        name: '',\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.render()\r\n    }\r\n\r\n    inputHandler = (field,e) => {\r\n        this.setState({\r\n            [field]: e.target.value,\r\n        })\r\n    }\r\n\r\n    addEntry = () => {\r\n        const newEntry = {\r\n            id: this.props.entries.length + 1,\r\n            priority: this.state.priority,\r\n            name: this.state.name,\r\n            status: 'ran out',\r\n            date: new Date().toLocaleDateString()\r\n        }\r\n\r\n        this.props.createEntry(newEntry)\r\n        this.setState({entries: [this.props.entries]})\r\n    }\r\n\r\n    filter = () => {\r\n        const have = document.querySelector('#checkHave')\r\n        const ranOut = document.querySelector('#checkRunOut')\r\n\r\n        this.setState(() => {\r\n            if (have.checked && ranOut.checked) {\r\n                return {\r\n                    entries: this.state.entries\r\n                }\r\n            }\r\n            else if (!have.checked && !ranOut.checked) {\r\n                return {\r\n                    entries: []\r\n                }\r\n            }\r\n            else if (have.checked) {\r\n                return {\r\n                    entries: this.state.entries.filter(entry => entry.status !== 'ran out')\r\n                }\r\n            }\r\n            else if (ranOut.checked) {\r\n                return {\r\n                    entries: this.state.entries.filter(entry => entry.status !== 'have')\r\n                }\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='list'>\r\n                <div className='list-actions'>\r\n                    <div>\r\n                        <label> \r\n                            <input id='checkHave' onChange={this.filter} defaultChecked type=\"checkbox\"/> ran out\r\n                        </label>\r\n                        <label> \r\n                            <input id='checkRunOut' onChange={this.filter} defaultChecked type=\"checkbox\"/> have\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className='list-header'>\r\n                    <div>priority</div>\r\n                    <div>name</div>\r\n                    <div>status</div>\r\n                    <div>date</div>\r\n                    <div>actions</div>\r\n                </div>\r\n                <div className='list-add'>\r\n                    <select onChange={this.inputHandler.bind(this, 'priority')}>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                    </select>\r\n                    <input type=\"text\" onChange={this.inputHandler.bind(this, 'name')}/>\r\n                    <button onClick={this.addEntry} className='list-btn'>+</button>\r\n                </div>\r\n                <div className='list-content'>\r\n                    {this.state.entries.sort((a, b) => a.priority - b.priority).map(entry => (\r\n                        <Entry \r\n                            key={entry.id}\r\n                            id={entry.id}\r\n                            priority={entry.priority}\r\n                            name={entry.name}\r\n                            status={entry.status}\r\n                            date={entry.date}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        entries: state.entriesReducer.entries\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createEntry: e => dispatch(createEntry(e)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React from 'react'\r\nimport {RenderIf} from '../../renderIf'\r\nimport Entries from '../Entries/Entries'\r\nimport List from '../List/List'\r\n\r\nimport './Page.css'\r\n\r\n\r\nconst Page = (props) => {\r\n    return (\r\n        <div className={props.class}>\r\n            <div className=\"container\">\r\n                <RenderIf condition={props.class === 'page page-list'}>\r\n                    <List/>\r\n                </RenderIf>\r\n                <RenderIf condition={props.class === 'page page-entries'}>\r\n                    <Entries/>\r\n                </RenderIf>\r\n                <RenderIf condition={props.class === 'page page-error'}>\r\n                    <div>Error 404. Page not found.</div>\r\n                </RenderIf>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport Header from './Header/Header'\nimport Page from './page/Page'\n\nfunction App() {\n  return (\n    <>\n        <Router basename={'/grocery-list'}>\n          <Header />\n            <Switch>\n                <Route exact path=\"/\" render={() => <Redirect to=\"/list\"/>}/>\n                <Route path={'/list'} render={() => <Page class='page page-list'/>} />\n                <Route path={'/entries'} render={() => <Page class='page page-entries'/>} />\n                <Route render={() => <Page class='page page-error'/>} />\n            </Switch>\n        </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers} from 'redux'\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {entriesReducer} from '../redux/entries'\r\n\r\nconst rootReducer = combineReducers({\r\n    entriesReducer\r\n})\r\n\r\nconst initialState = localStorage.getItem('grocery') || {};\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    // initialState,\r\n    composeWithDevTools()\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}